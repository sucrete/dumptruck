{"ast":null,"code":"var _jsxFileName = \"/Users/williamandree/Kod3n/dumptruck/pages/maxlabor.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Marquee from \"../components/Marquee\";\nimport Body from \"../components/ArtistBody\";\nimport Link from \"next/link\";\nimport \"../public/artistPage.css\";\nconst works = [\"UkTgAJBG7Z\", \"NOOV2j2acI\", \"eQi6npuDfI\", \"oYPnWB7Icv\", \"pDxprZWvwJ\", \"KF4eZ5UCAt\", \"Zq7WzMJrEa\", \"IlPsrHIURg\", \"qY1wneOsVg\", \"HWvkDFh9Ef\"];\nconst artist = \"maxlabor\";\nexport default function Maxlabor() {\n  return __jsx(\"div\", {\n    className: \"jsx-2085888330\" + \" \" + \"page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(Marquee, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-2085888330\" + \" \" + \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"PROFILE\"), __jsx(\"div\", {\n    className: \"jsx-2085888330\" + \" \" + \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, artist)), __jsx(Body, {\n    artist: artist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, works.map(work => __jsx(Link, {\n    href: \"[artist]/[work]\",\n    as: `${artist}/${work}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    key: work,\n    className: \"jsx-2085888330\" + \" \" + \"fileName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"jsx-2085888330\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, artist, \"/\", work, \".dump\")))), __jsx(Link, {\n    href: \"[artist]/all\",\n    as: `${artist}/all`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-2085888330\" + \" \" + \"directoryFooter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"/alldumps.png\",\n    className: \"jsx-2085888330\" + \" \" + \"iconImgReverse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    className: \"jsx-2085888330\" + \" \" + \"allDumpsTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"one page\")))), __jsx(_JSXStyle, {\n    id: \"2085888330\",\n    __self: this\n  }, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsaWFtYW5kcmVlL0tvZDNuL2R1bXB0cnVjay9wYWdlcy9tYXhsYWJvci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyQ2tCIiwiZmlsZSI6Ii9Vc2Vycy93aWxsaWFtYW5kcmVlL0tvZDNuL2R1bXB0cnVjay9wYWdlcy9tYXhsYWJvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNYXJxdWVlIGZyb20gXCIuLi9jb21wb25lbnRzL01hcnF1ZWVcIjtcbmltcG9ydCBCb2R5IGZyb20gXCIuLi9jb21wb25lbnRzL0FydGlzdEJvZHlcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcbmltcG9ydCBcIi4uL3B1YmxpYy9hcnRpc3RQYWdlLmNzc1wiO1xuXG5jb25zdCB3b3JrcyA9IFtcbiAgXCJVa1RnQUpCRzdaXCIsXG4gIFwiTk9PVjJqMmFjSVwiLFxuICBcImVRaTZucHVEZklcIixcbiAgXCJvWVBuV0I3SWN2XCIsXG4gIFwicER4cHJaV3Z3SlwiLFxuICBcIktGNGVaNVVDQXRcIixcbiAgXCJacTdXek1KckVhXCIsXG4gIFwiSWxQc3JISVVSZ1wiLFxuICBcInFZMXduZU9zVmdcIixcbiAgXCJIV3ZrREZoOUVmXCJcbl07XG5jb25zdCBhcnRpc3QgPSBcIm1heGxhYm9yXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNYXhsYWJvcigpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInBhZ2VcIj5cbiAgICAgIDxNYXJxdWVlPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByb2ZpbGVcIj5QUk9GSUxFPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGVyXCI+e2FydGlzdH08L2Rpdj5cbiAgICAgIDwvTWFycXVlZT5cbiAgICAgIDxCb2R5IGFydGlzdD17YXJ0aXN0fT5cbiAgICAgICAge3dvcmtzLm1hcCh3b3JrID0+IChcbiAgICAgICAgICA8TGluayBocmVmPVwiW2FydGlzdF0vW3dvcmtdXCIgYXM9e2Ake2FydGlzdH0vJHt3b3JrfWB9PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmaWxlTmFtZVwiIGtleT17d29ya30+XG4gICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgIHthcnRpc3R9L3t3b3JrfS5kdW1wXG4gICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgKSl9XG4gICAgICAgIDxMaW5rIGhyZWY9XCJbYXJ0aXN0XS9hbGxcIiBhcz17YCR7YXJ0aXN0fS9hbGxgfT5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRpcmVjdG9yeUZvb3RlclwiPlxuICAgICAgICAgICAgPGltZyBjbGFzc05hbWU9XCJpY29uSW1nUmV2ZXJzZVwiIHNyYz1cIi9hbGxkdW1wcy5wbmdcIiAvPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiYWxsRHVtcHNUaXRsZVwiPm9uZSBwYWdlPC9zcGFuPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L0xpbms+XG4gICAgICA8L0JvZHk+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICk7XG59XG4iXX0= */\\n/*@ sourceURL=/Users/williamandree/Kod3n/dumptruck/pages/maxlabor.js */\"));\n}","map":{"version":3,"sources":["/Users/williamandree/Kod3n/dumptruck/pages/maxlabor.js"],"names":["Marquee","Body","Link","works","artist","Maxlabor","map","work"],"mappings":";;;;AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,0BAAP;AAEA,MAAMC,KAAK,GAAG,CACZ,YADY,EAEZ,YAFY,EAGZ,YAHY,EAIZ,YAJY,EAKZ,YALY,EAMZ,YANY,EAOZ,YAPY,EAQZ,YARY,EASZ,YATY,EAUZ,YAVY,CAAd;AAYA,MAAMC,MAAM,GAAG,UAAf;AACA,eAAe,SAASC,QAAT,GAAoB;AACjC,SACE;AAAA,wCAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA,wCAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,MAAzB,CAFF,CADF,EAKE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAEA,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACG,GAAN,CAAUC,IAAI,IACb,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,iBAAX;AAA6B,IAAA,EAAE,EAAG,GAAEH,MAAO,IAAGG,IAAK,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAA0B,IAAA,GAAG,EAAEA,IAA/B;AAAA,wCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MADH,OACYG,IADZ,UADF,CADF,CADD,CADH,EAUE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,EAAE,EAAG,GAAEH,MAAO,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA,wCAAe,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAgC,IAAA,GAAG,EAAC,eAApC;AAAA,wCAAe,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA,wCAAgB,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,CAVF,CALF;AAAA;AAAA;AAAA,mlEADF;AA2BD","sourcesContent":["import Marquee from \"../components/Marquee\";\nimport Body from \"../components/ArtistBody\";\nimport Link from \"next/link\";\nimport \"../public/artistPage.css\";\n\nconst works = [\n  \"UkTgAJBG7Z\",\n  \"NOOV2j2acI\",\n  \"eQi6npuDfI\",\n  \"oYPnWB7Icv\",\n  \"pDxprZWvwJ\",\n  \"KF4eZ5UCAt\",\n  \"Zq7WzMJrEa\",\n  \"IlPsrHIURg\",\n  \"qY1wneOsVg\",\n  \"HWvkDFh9Ef\"\n];\nconst artist = \"maxlabor\";\nexport default function Maxlabor() {\n  return (\n    <div className=\"page\">\n      <Marquee>\n        <div className=\"profile\">PROFILE</div>\n        <div className=\"header\">{artist}</div>\n      </Marquee>\n      <Body artist={artist}>\n        {works.map(work => (\n          <Link href=\"[artist]/[work]\" as={`${artist}/${work}`}>\n            <div className=\"fileName\" key={work}>\n              <span>\n                {artist}/{work}.dump\n              </span>\n            </div>\n          </Link>\n        ))}\n        <Link href=\"[artist]/all\" as={`${artist}/all`}>\n          <div className=\"directoryFooter\">\n            <img className=\"iconImgReverse\" src=\"/alldumps.png\" />\n            <span className=\"allDumpsTitle\">one page</span>\n          </div>\n        </Link>\n      </Body>\n\n      <style jsx>{``}</style>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}